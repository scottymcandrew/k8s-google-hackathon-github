apiVersion: v1
kind: Service
metadata:
  name: jenkins-vuln
  labels:
    app: jenkins
    tier: backend
    role: master
spec:
  #type: LoadBalancer
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: jenkins
    tier: backend
    role: master
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: jenkins-vuln
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: jenkins
        role: master
        tier: backend
    spec:
      containers:
      - name: master
        image: scotty2hotty/jenkins_vuln
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-vuln-slave
  labels:
    app: jenkins
    tier: backend
    role: slave
spec:
  #type: LoadBalancer
  ports:
  - port: 8080
  selector:
    app: jenkins
    tier: backend
    role: slave
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: jenkins-vuln-slave
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: jenkins
        role: slave
        tier: backend
    spec:
      containers:
      - name: slave
        image: scotty2hotty/jenkins_vuln
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        env:
        - name: GET_HOSTS_FROM
          value: dns
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  annotations:
    cloud.google.com/load-balancer-type: "Internal"
  labels:
    app: jenkins-vuln-frontend
    tier: frontend
spec:
  type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: jenkins-vuln-frontend
    tier: frontend
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 3
  template:
    metadata:
      labels:
        app: jenkins-vuln-frontend
        tier: frontend
    spec:
      containers:
      - name: jenkins-vuln-frontend
        image: scotty2hotty/jenkins_vuln
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        env:
        - name: GET_HOSTS_FROM
          value: dns
        ports:
        - containerPort: 8080
